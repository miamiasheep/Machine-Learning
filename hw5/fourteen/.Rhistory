data=load.csv('E:/sheep(李揚)/Hotel/train.csv',nrows=10000)
data=read.csv('E:/sheep(李揚)/Hotel/train.csv',nrows=10000)
View(data)
View(data)
summary(data)
data=read.csv('E:/sheep(李揚)/Hotel/train.csv',nrows=100000)
summary(data)
data=read.csv('E:/sheep(李揚)/Hotel/train.csv',nrows=1000000)
memory.limit(1E8)
#I will igonore for the moment time of day
dateconv=setClass("dateconv")
setAs("character","dateconv", function(from) as.numeric(as.Date(from, format="%Y-%m-%d %H:%M:%S") ) )
#NA coded as NULL . Read a little bit (200)
train <- read.csv("train.csv", header=TRUE, nrows=200,sep = ",", quote="\"", dec=".",na.strings="NULL")
classes = sapply(train,class)
# I change logical variables to integer -not needed
classes[classes=="logical"]<- "integer"
# train
classes[c(5, 6, 10, 12, 13, 14, 16, 25, 26, 30, 33, 36, 39, 42, 45, 48, 51, 53)]="numeric"
#test
# classes[c(5, 6,10, 12, 13, 14, 15, 24, 25, 29, 32, 35, 38, 41, 44, 47, 50)]="numeric"
classes[2] <- "dateconv"
#Read all
train <- read.csv("train.csv", header=TRUE, colClasses=classes,sep = ",", quote="\"", dec=".",na.strings="NULL")
object.size(train)
# 2816585496 bytes
dim(train)
# 9917530 54
memory.limit(1E8)
#I will igonore for the moment time of day
dateconv=setClass("dateconv")
setAs("character","dateconv", function(from) as.numeric(as.Date(from, format="%Y-%m-%d %H:%M:%S") ) )
#NA coded as NULL . Read a little bit (200)
train <- read.csv("train.csv", header=TRUE, nrows=200,sep = ",", quote="\"", dec=".",na.strings="NULL")
classes = sapply(train,class)
# I change logical variables to integer -not needed
classes[classes=="logical"]<- "integer"
# train
classes[c(5, 6, 10, 12, 13, 14, 16, 25, 26, 30, 33, 36, 39, 42, 45, 48, 51, 53)]="numeric"
#test
# classes[c(5, 6,10, 12, 13, 14, 15, 24, 25, 29, 32, 35, 38, 41, 44, 47, 50)]="numeric"
classes[2] <- "dateconv"
#Read all
train <- read.csv("E:/sheep(李揚)/Hotel/train.csv", header=TRUE, colClasses=classes,sep = ",", quote="\"", dec=".",na.strings="NULL")
object.size(train)
# 2816585496 bytes
dim(train)
# 9917530 54
memory.limit(1E8)
#I will igonore for the moment time of day
dateconv=setClass("dateconv")
setAs("character","dateconv", function(from) as.numeric(as.Date(from, format="%Y-%m-%d %H:%M:%S") ) )
#NA coded as NULL . Read a little bit (200)
train <- read.csv("train.csv", header=TRUE, nrows=200,sep = ",", quote="\"", dec=".",na.strings="NULL")
classes = sapply(train,class)
# I change logical variables to integer -not needed
classes[classes=="logical"]<- "integer"
# train
classes[c(5, 6, 10, 12, 13, 14, 16, 25, 26, 30, 33, 36, 39, 42, 45, 48, 51, 53)]="numeric"
#test
# classes[c(5, 6,10, 12, 13, 14, 15, 24, 25, 29, 32, 35, 38, 41, 44, 47, 50)]="numeric"
classes[2] <- "dateconv"
#Read all
train <- read.csv('E:/sheep(李揚)/Hotel/train.csv', header=TRUE, colClasses=classes,sep = ",", quote="\"", dec=".",na.strings="NULL")
object.size(train)
# 2816585496 bytes
dim(train)
# 9917530 54
memory.limit(1E8)
#I will igonore for the moment time of day
dateconv=setClass("dateconv")
setAs("character","dateconv", function(from) as.numeric(as.Date(from, format="%Y-%m-%d %H:%M:%S") ) )
#NA coded as NULL . Read a little bit (200)
train <- read.csv("train.csv", header=TRUE, nrows=200,sep = ",", quote="\"", dec=".",na.strings="NULL")
classes = sapply(train,class)
# I change logical variables to integer -not needed
classes[classes=="logical"]<- "integer"
# train
classes[c(5, 6, 10, 12, 13, 14, 16, 25, 26, 30, 33, 36, 39, 42, 45, 48, 51, 53)]="numeric"
#test
# classes[c(5, 6,10, 12, 13, 14, 15, 24, 25, 29, 32, 35, 38, 41, 44, 47, 50)]="numeric"
classes[2] <- "dateconv"
#Read all
train <- read.csv('E:/sheep(李揚)/Hotel/train.csv', header=TRUE, colClasses=classes,sep = ",", quote="\"", dec=".",na.strings="NULL")
object.size(train)
# 2816585496 bytes
dim(train)
# 9917530 54
a<-function(x){}
a
fix(a)
fix(a)
fix(a)
a<-functino(x){
a<-x+1
a(1)
a
a<-functino(x){
a<-x+1
}
a(1)
a
a<-functino(x){
x+1
}
a(1)
a<-function(x){
x+1;
}
a(1)
a(3)
source("E:\\sheep(李揚)\\Hotel\\test.r")
a(1)
x<=rnorm(100)
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
z<-rnorm(100)
plot(x,z)
plot(x,y)
par(mar=c(2,2,2,2))
plot(x,y)
par(mar=c(4,4,2,2))
plot(x,y)
plot(x,y,pch=20)
plot(x,y,pch=3)
plot(x,y,pch=1)
example(points)
title("Scatterplot")
x<-rnorm(100)
y<-rnorm(100)
plot(x,y)
plot(x,y,pch=100)
plot(x,y,pch=20)
plot(x,y,pch=20)
par(mar=c(4,4,2,2))
plot(x,y,pch=20)
plot(x,y,pch=20,mar=c(4,4,2,2))
text(-2,-2,"Label")
legend("topleft",legend="Data")
legend("topleft",legend="Data",pch=20)
fit<-lm(y-x)
fit<-lm(y~x)
fit
abline(fit)
abline(fit,ldw=3)
abline(fit,lwd=3)
abline(fit,lwd=3,col="blue")
plot(x,y,xlab="weight",ylab="Height",main="Scatterplot")
clear
x<-rnorm(100)
y<-x+rnorm(100)
plot(x,y)
plot(x,y,type="n")
g<-gl(2,50)
g
g<-gl(2,50,labels=c("Male","Female"))
g
plot(x[g=="Male"],y["g=="Female],col="blue",pch=20)
plot(x[g=="Male"],y["g=="Female"],col="blue",pch=20)
plot(x[g=="Male"],y["g=="Male"],col="blue",pch=20)
plot(x,y)
plot(x[g=="Male"],y["g=="Male"],col="blue",pch=20)
plot(x[g=="Male"],y["g=="Male"],col="blue",pch=20)
plot(x[g == "Male"],y[g=="Male"],col="blue",pch=20)
plot(x[g == "Female"],y[g=="Female"],col="red",pch=20)
plot(x[g == "Male"],y[g=="Male"],col="blue",pch=20)
plot(x,y,type="n")
plot(x[g == "Male"],y[g=="Male"],col="blue",pch=20)
plot(x[g == "Female"],y[g=="Female"],col="red",pch=20)
plot(x,y,type="n")
points(x[g == "Female"],y[g=="Female"],col="red",pch=20)
plot(x[g == "Male"],y[g=="Male"],col="blue",pch=20)
points(x[g == "Female"],y[g=="Female"],col="red",pch=20)
library(lattice)
library(nlme)
xyplot(distance ~ age | Subject, data = Orthodont)
Subject
data
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
Orthodont
library(lattice)
corr<-function(directory,threshold=0){
temp<-complete(directory)
count<-1
ans<-NULL
for(i in 1:nrow(temp)){
for(i in 1:nrow(temp)){
for(i in 1:nrow(temp)){
source('E:/sheep(李揚)/specdata/corr.R')
}
]
data(environmental)
xyplot(ozone~radiation,data=environmental)
temp.cut<-equal.count(environmental$temparature,4)
?equal.count
?equal.count()
temp.cut<-equal.count(environmental$temparature,4)
temp.cut<-equal.count(environmental$temparature,4)
library(lattice)
data(environmental)
temp.cut<-equal.count(environmental$temperature,4)
temp.cut
temp.cut(1)
?equal.count
xyplot(ozone~radiation|temp.cut,data=environment)
xyplot(ozone~radiation|temp.cut,data=environmental)
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(1,4)
)
?loess
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(1,4),
panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.loess(x,y)
})
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(1,4),
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(x~y)
panel.abline(fit)
})
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(x~y)
panel.abline(fit)
})
fit<-lm(y~x)
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit)
})
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,lmd=2)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,lmd=5)
},xlab="Radiation",ylab="Ozone",main="My project")
library(lattice)
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,lmd=5)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,lmd=5)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,lmd=5)
},xlab="Radiation",ylab="Ozone",main="My project")
splom(environmental)
?splom
histogram(~temparature|data=environmental)
histogram(~ozone|data=environmental)
histogram(~ozone,data=environmental)
histogram(~ozone|temp.cut,data=environmental)
histogram(~ozone|temp.cut,data=environmental,layout=c(1,4))
data(enviromental)
environmental
histogram(~radiation,data=environmental)
histogram(~radiation|temp.cut,data=environmental)
histogram(~radiation|wind.cut,data=environmental)
histogram(~radiation|wind.cut,data=environmental)
wind.cut<-equal.cut(environmental$wind,4)
wind.cut<-equal.count(environmental$wind,4)
histogram(~radiation|wind.cut,data=environmental)
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
sppanel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit,lmd=5)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
sppanel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
sppanel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
fit<-lm(y~x)
panel.abline(fit)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
#fit<-lm(y~x)
#panel.abline(fit)
loess(x~y)
},xlab="Radiation",ylab="Ozone",main="My project")
panel=function(x,y,...){
}
loess
?loess
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
#fit<-lm(y~x)
#panel.abline(fit)
loess(y~x,data=environmental)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
#fit<-lm(y~x)
#panel.abline(fit)
fit<-loess(y~x,data=environmental)
panel.abline(fit)
},xlab="Radiation",ylab="Ozone",main="My project")
panel=function(x,y,...){
panel.xyplot(x,y,...)
#fit<-lm(y~x)
#panel.abline(fit)
fit<-loess(y~x,data=environmental)
panel.abline(fit)
},xlab="Radiation",ylab="Ozone",main="My project")
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
#fit<-lm(y~x)
#panel.abline(fit)
fit<-loess(y~x,data=environmental)
panel.abline(fit)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
#fit<-lm(y~x)
#panel.abline(fit)
panel.loess(y~x,data=environmental)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
#fit<-lm(y~x)
#panel.abline(fit)
panel.loess(x~y)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.loess(x~y)
},xlab="Radiation",ylab="Ozone",main="My project")
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.loess(x,y)
},xlab="Radiation",ylab="Ozone",main="My project")
?file
?serialize
?png
?bitmap
?png
?quartz
?quartz
??quartz
x
x<-norm(100)
x<-rnorm(100)
hist(x)
?lines
?pch
?par("pch")
par("pch")
x<-rnorm(100)
plot(x,y)
plot(x~y)
y<-2x
y<-2*x
plot(x,y)
plot(x,y,pch=20)
plot(x,y,pch=3)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(nlme)
nlme
data<-libirary(nlme)
BodyWeight
height(BodyWeight)
head(BodyWeight)
summary(BodyWeight$diet)
summary(BodyWeight)
BodyWeight
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(2,2),pch=20,
?fpanel=function(x,y,...){
panel.xyplot(x,y,...)
panel.loess(x,y)
},xlab="Radiation",ylab="Ozone",main="My project")
View(environmental)
?panel.lmline
?axis
plot(0, 0, main = expression(theta))
set.seed(1)
rpois(5, 2)
?lines()
?shingle
library(31071)
library(e1071)
?svm
temp <- "今天真是晴朗的好天氣"
textcnt(temp, method="ngram", n=3L, decreasing=TRUE)
setwd("C:/Users/MS Lab/Dropbox/台大二上/Machine Learning/hw5/fourteen")
setwd("C:/Users/MS Lab/Dropbox/台大二上/Machine Learning/hw5/fourteen")
fourteen
fourteen()
getwd()
fdsfd
fdsfd
fdsfd
